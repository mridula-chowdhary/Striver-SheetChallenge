vector<int> bottomView(BinaryTreeNode<int> * root){

    vector<int>ans;
    map<int,int>mpp;
    queue<pair<BinaryTreeNode<int>*,int>>q;
    q.push({root,0});
    while(!q.empty()){
        BinaryTreeNode<int>* node= q.front().first;
        int lvl= q.front().second;
        q.pop();
       mpp[lvl]=node->data;
       if(node->left) q.push({node->left,lvl-1});
       if (node->right)q.push({node->right,lvl+1});
    }
    for(auto it: mpp){
        ans.push_back(it.second);
    }
    return ans;
    
}
