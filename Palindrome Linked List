int count( LinkedListNode<int>* head){
     LinkedListNode<int> *temp=head;
    int cnt=0;
    while(temp!=NULL){
        cnt++;
        temp= temp->next;
    }
    return cnt;
}

bool isPalindrome(LinkedListNode<int> *head) {
  LinkedListNode<int> *curr=head;
 stack<int>s;
 int tot=count(head);
 int mid=tot/2;
 int cnt=0;
 while(cnt<mid){
   s.push(curr->data);
   curr=curr->next;
   cnt++;
 }
 if(tot % 2!=0){
     curr=curr->next;
 }
  while(!s.empty()){
   if(curr->data != s.top()){
       return false;
   }
   else{
       curr=curr->next;
       s.pop();
   }
  
  }
   return true;
}
