void inorder (BinaryTreeNode <int>* root,vector<int>&ans){
    if (root==NULL) return;
    inorder(root->left,ans);
    ans.push_back(root->data);
    inorder(root->right,ans);
}
void preorder (BinaryTreeNode <int>* root,vector<int>&ans){
    if (root==NULL) return;
    ans.push_back(root->data);
    preorder(root->left,ans);
    preorder(root->right,ans);
}
void postorder (BinaryTreeNode <int>* root,vector<int>&ans){
    if (root==NULL) return;
    postorder(root->left,ans);
    postorder(root->right,ans);
    ans.push_back(root->data);
}
vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    vector<vector<int>>temp;
    vector<int>ans;
    inorder(root,ans);
    temp.push_back(ans);
    ans.clear();
    preorder(root,ans);
    temp.push_back(ans);
    ans.clear();
    postorder(root,ans);
    temp.push_back(ans);
    ans.clear();
   return temp;
}
