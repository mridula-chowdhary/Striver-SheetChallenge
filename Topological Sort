#include <bits/stdc++.h> 
void dfs(int node,unordered_map<int,list<int>>&adj,stack<int>&st,vector<int>&vis){
        vis[node]=1;
        for(auto it:adj[node]){
            if(!vis[it])
            dfs(it,adj,st,vis);
        }
        st.push(node); 
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    unordered_map<int,list<int>>adj;
    stack<int>st;
    vector<int>ans;
    vector<int>vis(v+1,0);
    for(int i=0;i<edges.size();i++){
        int u= edges[i][0];
        int v=edges[i][1];
        adj[u].push_back(v);  
    }
    for(int i=0;i<v;i++){
        if(!vis[i])
        dfs(i,adj,st,vis);
    }
    while(!st.empty()){
        int top=st.top();
        st.pop();
        ans.push_back(top);
    }
    return ans;
}
