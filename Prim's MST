#include <bits/stdc++.h> 
#include <vector>
vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>,int>> &g)
{
    vector<pair<pair<int ,int>,int>>ans;
    vector<vector<pair<int,int>>> adj(n+1);
    for(int i=0;i<m;i++){
        int u=g[i].first.first;
        int v=g[i].first.second;
        int w=g[i].second;
       adj[u].push_back(make_pair(w, v));
       adj[v].push_back(make_pair(w, u));

    }

    priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,
     greater<pair<int,pair<int,int>>>>pq;
     vector<int>vis(n+1,0);
     pq.push({0,{1,-1}});
     while(!pq.empty()){
         int node=pq.top().second.first;
         int parent =pq.top().second.second;
         int wt=pq.top().first;
         pq.pop();
         if(vis[node]) continue;
         vis[node]=1;
         if(parent!=-1)
         ans.push_back({{node,parent},wt});

         for(auto it : adj[node]){
             if(!vis[it.second]){
                 pq.push({it.first,{it.second,node}});
             }
         }
     }

     return ans;
}
